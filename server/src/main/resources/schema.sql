CREATE TABLE IF NOT EXISTS users (
 id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
 name VARCHAR(255) NOT NULL,
 email VARCHAR(512) NOT NULL UNIQUE,
 CONSTRAINT pk_user PRIMARY KEY (id),
 CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TYPE event_state AS ENUM ('PENDING', 'PUBLISHED', 'CANCELED');

CREATE TABLE IF NOT EXISTS events (
 id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
 title VARCHAR(50) NOT NULL,
 annotation VARCHAR(255) NOT NULL,
 category_id BIGINT NOT NULL,
 confirmed_requests BIGINT,
 createdOn TIMESTAMP WITHOUT TIME ZONE NOT NULL,
 description VARCHAR(4000),
 event_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
 initiator_id BIGINT NOT NULL,
 paid BOOLEAN,
 participant_limit INT,
 published_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
 request_moderation BOOLEAN,
 state event_state,
 views BIGINT,
 CONSTRAINT pk_event PRIMARY KEY (id),
 CONSTRAINT FK_EVENT_ON_INITIATOR FOREIGN KEY (initiator_id) REFERENCES users (id),
 CONSTRAINT FK_EVENT_ON_CATEGORY FOREIGN KEY (category_id) REFERENCES categories (id)
);

CREATE TABLE IF NOT EXISTS categories (
 id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
 name VARCHAR(255) NOT NULL UNIQUE,
 CONSTRAINT pk_category PRIMARY KEY (id),
 CONSTRAINT UQ_USER_EMAIL UNIQUE (name)
);

CREATE TYPE request_status AS ENUM ('WAITING', 'ACCEPTED', 'CANCELED');

CREATE TABLE IF NOT EXISTS requests (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  event_id BIGINT NOT NULL,
  requester_id BIGINT NOT NULL,
  status request_status,
  CONSTRAINT pk_request PRIMARY KEY (id),
  CONSTRAINT FK_REQUEST_ON_REQUESTER FOREIGN KEY (requester_id) REFERENCES users (id),
  CONSTRAINT FK_REQUEST_ON_EVENT FOREIGN KEY (event_id) REFERENCES events (id)
);